/*
 * Bridge
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openvasp.core.model.ivms101;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.jetbrains.annotations.Nullable;

import java.io.IOException;

/**
 * NationalIdentification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NationalIdentification {
  public static final String SERIALIZED_NAME_NATIONAL_IDENTIFIER = "nationalIdentifier";
  @SerializedName(SERIALIZED_NAME_NATIONAL_IDENTIFIER)
  private String nationalIdentifier;

  /**
   * Gets or Sets nationalIdentifierType
   */
  @JsonAdapter(NationalIdentifierTypeEnum.Adapter.class)
  public enum NationalIdentifierTypeEnum {
    ARNU("ARNU"),
    
    CCPT("CCPT"),
    
    RAID("RAID"),
    
    DRLC("DRLC"),
    
    FIIN("FIIN"),
    
    TXID("TXID"),
    
    SOCS("SOCS"),
    
    IDCD("IDCD"),
    
    LEIX("LEIX"),
    
    MISC("MISC");

    private String value;

    NationalIdentifierTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NationalIdentifierTypeEnum fromValue(String value) {
      for (NationalIdentifierTypeEnum b : NationalIdentifierTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<NationalIdentifierTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NationalIdentifierTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NationalIdentifierTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return NationalIdentifierTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_NATIONAL_IDENTIFIER_TYPE = "nationalIdentifierType";
  @SerializedName(SERIALIZED_NAME_NATIONAL_IDENTIFIER_TYPE)
  private NationalIdentifierTypeEnum nationalIdentifierType;

  public static final String SERIALIZED_NAME_COUNTRY_OF_ISSUE = "countryOfIssue";
  @SerializedName(SERIALIZED_NAME_COUNTRY_OF_ISSUE)
  private String countryOfIssue;

  public static final String SERIALIZED_NAME_REGISTRATION_AUTHORITY = "registrationAuthority";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_AUTHORITY)
  private String registrationAuthority;


  public NationalIdentification nationalIdentifier(String nationalIdentifier) {
    
    this.nationalIdentifier = nationalIdentifier;
    return this;
  }

   /**
   * Get nationalIdentifier
   * @return nationalIdentifier
  **/
  @Nullable
  @ApiModelProperty(value = "")

  public String getNationalIdentifier() {
    return nationalIdentifier;
  }


  public void setNationalIdentifier(String nationalIdentifier) {
    this.nationalIdentifier = nationalIdentifier;
  }


  public NationalIdentification nationalIdentifierType(NationalIdentifierTypeEnum nationalIdentifierType) {
    
    this.nationalIdentifierType = nationalIdentifierType;
    return this;
  }

   /**
   * Get nationalIdentifierType
   * @return nationalIdentifierType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NationalIdentifierTypeEnum getNationalIdentifierType() {
    return nationalIdentifierType;
  }


  public void setNationalIdentifierType(NationalIdentifierTypeEnum nationalIdentifierType) {
    this.nationalIdentifierType = nationalIdentifierType;
  }


  public NationalIdentification countryOfIssue(String countryOfIssue) {
    
    this.countryOfIssue = countryOfIssue;
    return this;
  }

   /**
   * Get countryOfIssue
   * @return countryOfIssue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountryOfIssue() {
    return countryOfIssue;
  }


  public void setCountryOfIssue(String countryOfIssue) {
    this.countryOfIssue = countryOfIssue;
  }


  public NationalIdentification registrationAuthority(String registrationAuthority) {
    
    this.registrationAuthority = registrationAuthority;
    return this;
  }

   /**
   * Get registrationAuthority
   * @return registrationAuthority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRegistrationAuthority() {
    return registrationAuthority;
  }


  public void setRegistrationAuthority(String registrationAuthority) {
    this.registrationAuthority = registrationAuthority;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NationalIdentification nationalIdentification = (NationalIdentification) o;
    return Objects.equals(this.nationalIdentifier, nationalIdentification.nationalIdentifier) &&
        Objects.equals(this.nationalIdentifierType, nationalIdentification.nationalIdentifierType) &&
        Objects.equals(this.countryOfIssue, nationalIdentification.countryOfIssue) &&
        Objects.equals(this.registrationAuthority, nationalIdentification.registrationAuthority);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nationalIdentifier, nationalIdentifierType, countryOfIssue, registrationAuthority);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NationalIdentification {\n");
    sb.append("    nationalIdentifier: ").append(toIndentedString(nationalIdentifier)).append("\n");
    sb.append("    nationalIdentifierType: ").append(toIndentedString(nationalIdentifierType)).append("\n");
    sb.append("    countryOfIssue: ").append(toIndentedString(countryOfIssue)).append("\n");
    sb.append("    registrationAuthority: ").append(toIndentedString(registrationAuthority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

