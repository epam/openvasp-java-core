/*
 * Bridge
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openvasp.core.model.ivms101;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets NationalIdentifierTypeCode
 */
@JsonAdapter(NationalIdentifierTypeCode.Adapter.class)
public enum NationalIdentifierTypeCode {
  
  ARNU("ARNU"),
  
  CCPT("CCPT"),
  
  RAID("RAID"),
  
  DRLC("DRLC"),
  
  FIIN("FIIN"),
  
  TXID("TXID"),
  
  SOCS("SOCS"),
  
  IDCD("IDCD"),
  
  LEIX("LEIX"),
  
  MISC("MISC");

  private String value;

  NationalIdentifierTypeCode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static NationalIdentifierTypeCode fromValue(String value) {
    for (NationalIdentifierTypeCode b : NationalIdentifierTypeCode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<NationalIdentifierTypeCode> {
    @Override
    public void write(final JsonWriter jsonWriter, final NationalIdentifierTypeCode enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public NationalIdentifierTypeCode read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return NationalIdentifierTypeCode.fromValue(value);
    }
  }
}

