/*
 * Bridge
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openvasp.core.model.ivms101;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets TransliterationMethodCode
 */
@JsonAdapter(TransliterationMethodCode.Adapter.class)
public enum TransliterationMethodCode {
  
  ARAB("ARAB"),
  
  ARAN("ARAN"),
  
  ARMN("ARMN"),
  
  CYRL("CYRL"),
  
  DEVA("DEVA"),
  
  GEOR("GEOR"),
  
  GREK("GREK"),
  
  HANI("HANI"),
  
  HEBR("HEBR"),
  
  KANA("KANA"),
  
  KORE("KORE"),
  
  THAI("THAI"),
  
  OTHR("OTHR");

  private String value;

  TransliterationMethodCode(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TransliterationMethodCode fromValue(String value) {
    for (TransliterationMethodCode b : TransliterationMethodCode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TransliterationMethodCode> {
    @Override
    public void write(final JsonWriter jsonWriter, final TransliterationMethodCode enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TransliterationMethodCode read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TransliterationMethodCode.fromValue(value);
    }
  }
}

